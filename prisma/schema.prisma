generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Home {
  id                  String       @id @default(uuid()) @db.Uuid
  address             String       @db.VarChar(255)
  city                String       @db.VarChar(255)
  number_of_bedrooms  Int          @db.SmallInt
  number_of_bathrooms Int          @db.SmallInt
  listed_date         DateTime     @default(now()) @db.Timestamp
  property_type       PropertyType
  price               Float        @db.Real
  land_size           Int          @db.SmallInt
  created_at          DateTime     @default(now()) @db.Timestamp
  updated_at          DateTime     @updatedAt @db.Timestamp
  realtor_id          String       @db.Uuid
  realtor             User         @relation(fields: [realtor_id], references: [id])
  images              Image[]
  messages            Message[]

  @@map("homes")
}

model Image {
  id         String   @id @default(uuid()) @db.Uuid
  url        String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @updatedAt @db.Timestamp
  home_id    String   @db.Uuid
  home       Home     @relation(fields: [home_id], references: [id])

  @@map("images")
}

model User {
  id               String    @id @default(uuid()) @db.Uuid
  name             String    @db.VarChar(255)
  phone            String    @db.VarChar(30)
  email            String    @unique @db.VarChar(255)
  password         String    @db.VarChar(255)
  created_at       DateTime  @default(now()) @db.Timestamp
  updated_at       DateTime  @updatedAt @db.Timestamp
  role_id          String    @db.Uuid
  role             Role      @relation(fields: [role_id], references: [id])
  homes            Home[]
  buyer_messages   Message[] @relation("buyer_messages")
  realtor_messages Message[] @relation("realtor_messages")

  @@map("users")
}

model Role {
  id         String   @id @default(uuid()) @db.Uuid
  name       String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @updatedAt @db.Timestamp
  users      User[]

  @@map("roles")
}

model Message {
  id         String   @id @default(uuid()) @db.Uuid
  message    String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @updatedAt @db.Timestamp
  home_id    String   @db.Uuid
  realtor_id String   @db.Uuid
  buyer_id   String   @db.Uuid
  buyer      User     @relation("buyer_messages", fields: [buyer_id], references: [id])
  home       Home     @relation(fields: [home_id], references: [id])
  realtor    User     @relation("realtor_messages", fields: [realtor_id], references: [id])

  @@map("messages")
}

enum PropertyType {
  RESIDENTIAL
  CONDO
}
